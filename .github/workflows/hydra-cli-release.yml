name: publish
on:
  # When Release Pull Request is merged
  workflow_dispatch:
    inputs:
      manual_release:
        description: 'Manually release current version of hydra-cli'     
        required: true
        default: 'false'

  pull_request:
    branches:
      - master
      - hydra_v1
      - ci-test
      - ci-lerna
    types: [closed]

env:
  CI: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-18.04
    if: github.event.pull_request.merged == true || github.event.inputs.manual_release == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check version changes
        uses: EndBug/version-check@v1
        id: check
        with:
          diff-search: true
          file-name: ./packages/hydra-cli/package.json
      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Hydra-cli version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "always-auth=true"
          echo "@dzlzv:registry=https://registry.npmjs.org/" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo '//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}' >> .npmrc
          npm whoami
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          
      - name: Lerna publish 
        run: |
          lerna publish --canary --preid beta --yes
      #  if: steps.check.outputs.changed == 'true'
      #  run: |
      #    git config --global user.name 'github-actions'
      #    git config --global user.email 'github-actions@github.com'
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Set Release Version
      # if: steps.check.outputs.changed == 'true'
      # shell: bash -ex {0}
      # run: |
      #   RELEASE_VERSION=$(node -p 'require("./packages/hydra-cli/package.json").version')
      #   echo "::set-output name=RELEASE_VERSION::${RELEASE_VERSION}"
      #- name: Create Git Tag
      #  if: steps.check.outputs.changed == 'true'
      #  uses: azu/action-package-version-to-git-tag@v1
      #  with:
      #    version: ${{ env.RELEASE_VERSION }}
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
      #    github_repo: ${{ github.repository }}
      #    git_commit_sha: ${{ github.sha }}
      #    git_tag_prefix: "hydra-cli-v"
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Hydra-cli release ${{ github.ref }}
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
      - run: yarn
      - run: yarn workspace @dzlzv/hydra-cli build
      - run: "echo $(npm whoami)"
      - run: npm set //registry.npmjs.org/:_authToken ${NODE_AUTH_TOKEN}
      - run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc && cd ./packages/hydra-cli && npm publish --access public 
  
exports[`FTSQueryGenerator : Should generate migration 1`] = "import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class test1Migration111111111 implements MigrationInterface {\n    name = 'test1Migration111111111'\n\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        // TODO: escape \n        await queryRunner.query(`\n            ALTER TABLE post \n            ADD COLUMN test1_index_col tsvector \n            GENERATED ALWAYS AS (  \n                    setweight( to_tsvector( 'english', \n                                coalesce(initial_body_text, '') \n                            ), 'A' )  || \n                    setweight( to_tsvector( 'english', \n                                coalesce(title, '') \n                            ), 'A' ) \n                ) \n            ) STORED;\n        `);\n        await queryRunner.query(`CREATE INDEX test1_post_idx ON post USING GIN (test1_index_col)`);\n        await queryRunner.query(`\n            ALTER TABLE thread \n            ADD COLUMN test1_index_col tsvector \n            GENERATED ALWAYS AS (  \n                    setweight( to_tsvector( 'english', \n                                coalesce(initial_body_text, '') \n                            ), 'A' )  || \n                    setweight( to_tsvector( 'english', \n                                coalesce(title, '') \n                            ), 'A' ) \n                ) \n            ) STORED;\n        `);\n        await queryRunner.query(`CREATE INDEX test1_thread_idx ON thread USING GIN (test1_index_col)`);\n\n        await queryRunner.query(`\n            CREATE VIEW test1_view AS\n            SELECT \n                text 'post' AS origin_table, id, test1_index_col AS document\n            FROM\n                post\n            UNION ALL\n            SELECT \n                text 'thread' AS origin_table, id, test1_index_col AS document\n            FROM\n                thread\n        `);\n\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n        await queryRunner.query(`DROP VIEW test1_view`);\n        await queryRunner.query(`DROP INDEX test1_post_idx`);\n        await queryRunner.query(`ALTER TABLE post DROP COLUMN test1_index_col`);\n        await queryRunner.query(`DROP INDEX test1_thread_idx`);\n        await queryRunner.query(`ALTER TABLE thread DROP COLUMN test1_index_col`);\n    }\n\n\n}\n";
